{"ast":null,"code":"var _jsxFileName = \"/Users/lewis.battersby/workspace/personal/database-testing/frontend/src/Components/CreatureForm.js\",\n    _s = $RefreshSig$();\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CreatureForm() {\n  _s();\n\n  const [name, setName] = useState(null);\n  const [type, setType] = useState(null);\n  const [description, setDescription] = useState(null);\n  const [attacks, setAttacks] = useState([]);\n  const [stats] = useState({\n    health: null,\n    attack: null,\n    defense: null\n  });\n  const [attackList, setAttackList] = useState([]);\n  const [attacksInput, setAttacksInput] = useState([]);\n  const [msg, setMsg] = useState(\" \");\n  const [isLoaded, setIsLoaded] = useState(false);\n  useEffect(() => {\n    if (!isLoaded) setIsLoaded(true);\n    fetch(\"http://localhost:8080/all-attacks\").then(res => res.json()).then(result => {\n      setAttackList(result);\n    }).catch(() => setMsg(\"Connection error, try again later.\"));\n    setIsLoaded(true);\n  }, []);\n\n  const onSubmit = () => {\n    if (fieldsNotNull()) {\n      fetch(\"http://localhost:8080/creature\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          name: name,\n          type: type,\n          description: description,\n          attacks: attacks,\n          stats: stats\n        }),\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\"\n        }\n      }).then(async data => {\n        if (data.ok) {\n          window.open(\"/creatures\", \"_self\");\n        } else {\n          data = await data.json();\n          setMsg(data.message);\n        }\n      }).catch(e => setMsg(\"Connection error, try again later.\"));\n    } else {\n      setMsg(\"Please fill in all fields.\");\n    }\n  };\n\n  const addAttack = e => {\n    fetch(\"http://localhost:8080/attack/\" + e.target.value).then(res => res.json()).then(result => {\n      setAttacks([...attacks, result]);\n    }).catch(() => setMsg(\"Connection error, try again later.\"));\n  };\n\n  const addAttackInput = () => {\n    setAttacksInput([...attacksInput, /*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"mb-10 w-full\",\n      onChange: addAttack,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Select an attack\",\n        children: \"- Select an attack -\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), attackList.map(attack => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: attack.id,\n        children: attack.name\n      }, attack.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 45\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]);\n  };\n\n  const removeAttackInput = () => {\n    setAttacksInput(attacksInput.slice(0, -1));\n    setAttacks(attacks.slice(0, -1));\n  };\n\n  const fieldsNotNull = () => {\n    return name != null & description != null & stats.defense != null & stats.attack != null & stats.health != null;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"flex flex-col items-left space-y-10 p-10 bg-gray-100 border-2 border-gray-200\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl text-gray-500\",\n      children: \" Creature Builder \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Name\",\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Type\",\n      onChange: e => setType(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"w-full h-32 align-text-top\",\n      type: \"text\",\n      placeholder: \"Description\",\n      onChange: e => setDescription(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-lg text-gray-500\",\n      children: \"Attacks:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center w-full\",\n      children: [attacksInput, /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => removeAttackInput(),\n        className: \"cursor-pointer text-3xl text-red-700\",\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => addAttackInput(),\n        className: \"cursor-pointer text-3xl text-green-700\",\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-lg text-gray-500\",\n      children: \"Stats:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-x-10 flex justify-between\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"w-1/3\",\n        type: \"number\",\n        placeholder: \"HP\",\n        onChange: e => stats.health = e.target.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"w-1/3\",\n        type: \"number\",\n        placeholder: \"ATT\",\n        onChange: e => stats.attack = e.target.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"w-1/3\",\n        type: \"number\",\n        placeholder: \"DEF\",\n        onChange: e => stats.defense = e.target.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"text-xl text-gray-500 pt-5\",\n      onClick: () => onSubmit(),\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center text-red-700\",\n      children: msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n}\n\n_c = CreatureForm;\n\n_s(CreatureForm, \"8O7gYzKBU+soxE9cR/9zoM3nzIk=\");\n\nexport default CreatureForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatureForm\");","map":{"version":3,"sources":["/Users/lewis.battersby/workspace/personal/database-testing/frontend/src/Components/CreatureForm.js"],"names":["CreatureForm","name","setName","useState","type","setType","description","setDescription","attacks","setAttacks","stats","health","attack","defense","attackList","setAttackList","attacksInput","setAttacksInput","msg","setMsg","isLoaded","setIsLoaded","useEffect","fetch","then","res","json","result","catch","onSubmit","fieldsNotNull","method","body","JSON","stringify","headers","data","ok","window","open","message","e","addAttack","target","value","addAttackInput","map","id","removeAttackInput","slice"],"mappings":";;;;;AACA,SAASA,YAAT,GAAuB;AAAA;;AAEnB,QAAM,CAAEC,IAAF,EAASC,OAAT,IAAqBC,QAAQ,CAAC,IAAD,CAAnC;AACA,QAAM,CAAEC,IAAF,EAASC,OAAT,IAAqBF,QAAQ,CAAC,IAAD,CAAnC;AACA,QAAM,CAAEG,WAAF,EAAgBC,cAAhB,IAAmCJ,QAAQ,CAAC,IAAD,CAAjD;AACA,QAAM,CAAEK,OAAF,EAAYC,UAAZ,IAA2BN,QAAQ,CAAC,EAAD,CAAzC;AACA,QAAM,CAAEO,KAAF,IAAYP,QAAQ,CAAC;AAACQ,IAAAA,MAAM,EAAC,IAAR;AAAcC,IAAAA,MAAM,EAAC,IAArB;AAA2BC,IAAAA,OAAO,EAAC;AAAnC,GAAD,CAA1B;AACA,QAAM,CAAEC,UAAF,EAAcC,aAAd,IAAgCZ,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAAEa,YAAF,EAAgBC,eAAhB,IAAoCd,QAAQ,CAAC,EAAD,CAAlD;AAEA,QAAM,CAAEe,GAAF,EAAOC,MAAP,IAAkBhB,QAAQ,CAAC,GAAD,CAAhC;AACA,QAAM,CAAEiB,QAAF,EAAYC,WAAZ,IAA4BlB,QAAQ,CAAC,KAAD,CAA1C;AAEAmB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAG,CAACF,QAAJ,EACIC,WAAW,CAAC,IAAD,CAAX;AACAE,IAAAA,KAAK,CAAC,mCAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAGSG,MAAD,IAAY;AACRZ,MAAAA,aAAa,CAACY,MAAD,CAAb;AACH,KALT,EAKWC,KALX,CAKiB,MAAMT,MAAM,CAAC,oCAAD,CAL7B;AAMAE,IAAAA,WAAW,CAAC,IAAD,CAAX;AACT,GAVU,EAUR,EAVQ,CAAT;;AAYA,QAAMQ,QAAQ,GAAG,MAAM;AACnB,QAAGC,aAAa,EAAhB,EAAmB;AACfP,MAAAA,KAAK,CAAC,gCAAD,EAAmC;AACxCQ,QAAAA,MAAM,EAAE,MADgC;AAExCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACbjC,UAAAA,IAAI,EAACA,IADQ;AAEbG,UAAAA,IAAI,EAACA,IAFQ;AAGbE,UAAAA,WAAW,EAACA,WAHC;AAIbE,UAAAA,OAAO,EAACA,OAJK;AAKbE,UAAAA,KAAK,EAACA;AALO,SAAf,CAFkC;AASxCyB,QAAAA,OAAO,EAAE;AAAC,0BAAgB;AAAjB;AAT+B,OAAnC,CAAL,CAUGX,IAVH,CAUQ,MAAOY,IAAP,IAAgB;AACpB,YAAIA,IAAI,CAACC,EAAT,EAAa;AACTC,UAAAA,MAAM,CAACC,IAAP,CAAY,YAAZ,EAA0B,OAA1B;AACH,SAFD,MAGK;AACDH,UAAAA,IAAI,GAAG,MAAMA,IAAI,CAACV,IAAL,EAAb;AACAP,UAAAA,MAAM,CAACiB,IAAI,CAACI,OAAN,CAAN;AACH;AACJ,OAlBD,EAkBGZ,KAlBH,CAkBSa,CAAC,IAAItB,MAAM,CAAC,oCAAD,CAlBpB;AAmBH,KApBD,MAqBK;AACDA,MAAAA,MAAM,CAAC,4BAAD,CAAN;AACH;AACJ,GAzBD;;AA2BA,QAAMuB,SAAS,GAAID,CAAD,IAAO;AACrBlB,IAAAA,KAAK,CAAC,kCAAgCkB,CAAC,CAACE,MAAF,CAASC,KAA1C,CAAL,CACSpB,IADT,CACcC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADrB,EAESF,IAFT,CAGaG,MAAD,IAAY;AACRlB,MAAAA,UAAU,CAAC,CAAC,GAAGD,OAAJ,EAAamB,MAAb,CAAD,CAAV;AACH,KALb,EAKeC,KALf,CAKqB,MAAMT,MAAM,CAAC,oCAAD,CALjC;AAMH,GAPD;;AASA,QAAM0B,cAAc,GAAG,MAAM;AACzB5B,IAAAA,eAAe,CAAC,CAAC,GAAGD,YAAJ,eACZ;AAAQ,MAAA,SAAS,EAAC,cAAlB;AAAiC,MAAA,QAAQ,EAAE0B,SAA3C;AAAA,8BACI;AAAQ,QAAA,KAAK,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEK5B,UAAU,CAACgC,GAAX,CAAgBlC,MAAD,iBAAY;AAAwB,QAAA,KAAK,EAAEA,MAAM,CAACmC,EAAtC;AAAA,kBAA2CnC,MAAM,CAACX;AAAlD,SAAaW,MAAM,CAACmC,EAApB;AAAA;AAAA;AAAA;AAAA,cAA3B,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,YADY,CAAD,CAAf;AAMH,GAPD;;AASA,QAAMC,iBAAiB,GAAG,MAAM;AAC5B/B,IAAAA,eAAe,CAACD,YAAY,CAACiC,KAAb,CAAmB,CAAnB,EAAsB,CAAC,CAAvB,CAAD,CAAf;AACAxC,IAAAA,UAAU,CAACD,OAAO,CAACyC,KAAR,CAAc,CAAd,EAAiB,CAAC,CAAlB,CAAD,CAAV;AACH,GAHD;;AAKA,QAAMnB,aAAa,GAAG,MAAM;AACxB,WAAQ7B,IAAI,IAAI,IAAT,GAAkBK,WAAW,IAAI,IAAjC,GAA0CI,KAAK,CAACG,OAAN,IAAiB,IAA3D,GAAoEH,KAAK,CAACE,MAAN,IAAgB,IAApF,GAA6FF,KAAK,CAACC,MAAN,IAAgB,IAApH;AACH,GAFD;;AAIA,sBACI;AAAM,IAAA,SAAS,EAAC,+EAAhB;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAC,MAA/B;AAAsC,MAAA,QAAQ,EAAE8B,CAAC,IAAIvC,OAAO,CAACuC,CAAC,CAACE,MAAF,CAASC,KAAV;AAA5D;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAC,MAA/B;AAAsC,MAAA,QAAQ,EAAEH,CAAC,IAAIpC,OAAO,CAACoC,CAAC,CAACE,MAAF,CAASC,KAAV;AAA5D;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAU,MAAA,SAAS,EAAC,4BAApB;AAAgD,MAAA,IAAI,EAAC,MAArD;AAA4D,MAAA,WAAW,EAAC,aAAxE;AAAsF,MAAA,QAAQ,EAAEH,CAAC,IAAIlC,cAAc,CAACkC,CAAC,CAACE,MAAF,CAASC,KAAV;AAAnH;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAG,MAAA,SAAS,EAAC,uBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI;AAAK,MAAA,SAAS,EAAC,mCAAf;AAAA,iBAEK5B,YAFL,eAGI;AAAK,QAAA,OAAO,EAAE,MAAMgC,iBAAiB,EAArC;AAAyC,QAAA,SAAS,EAAC,sCAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAK,QAAA,OAAO,EAAE,MAAMH,cAAc,EAAlC;AAAsC,QAAA,SAAS,EAAC,wCAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,eAYI;AAAG,MAAA,SAAS,EAAC,uBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZJ,eAaI;AAAK,MAAA,SAAS,EAAC,iCAAf;AAAA,8BACI;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAyB,QAAA,IAAI,EAAC,QAA9B;AAAuC,QAAA,WAAW,EAAC,IAAnD;AAAwD,QAAA,QAAQ,EAAEJ,CAAC,IAAI/B,KAAK,CAACC,MAAN,GAAe8B,CAAC,CAACE,MAAF,CAASC;AAA/F;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAyB,QAAA,IAAI,EAAC,QAA9B;AAAuC,QAAA,WAAW,EAAC,KAAnD;AAAyD,QAAA,QAAQ,EAAEH,CAAC,IAAI/B,KAAK,CAACE,MAAN,GAAe6B,CAAC,CAACE,MAAF,CAASC;AAAhG;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAyB,QAAA,IAAI,EAAC,QAA9B;AAAuC,QAAA,WAAW,EAAC,KAAnD;AAAyD,QAAA,QAAQ,EAAEH,CAAC,IAAI/B,KAAK,CAACG,OAAN,GAAgB4B,CAAC,CAACE,MAAF,CAASC;AAAjG;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAbJ,eAkBI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,4BAAhC;AAA6D,MAAA,OAAO,EAAE,MAAMf,QAAQ,EAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBJ,eAmBI;AAAG,MAAA,SAAS,EAAC,0BAAb;AAAA,gBAAyCX;AAAzC;AAAA;AAAA;AAAA;AAAA,YAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH;;KAvGQlB,Y;;GAAAA,Y;;AAyGT,eAAeA,YAAf","sourcesContent":["\nfunction CreatureForm(){\n\n    const [ name , setName ] = useState(null)\n    const [ type , setType ] = useState(null)\n    const [ description , setDescription ] = useState(null)\n    const [ attacks , setAttacks ] = useState([])\n    const [ stats ] = useState({health:null, attack:null, defense:null})\n    const [ attackList, setAttackList ] = useState([])\n    const [ attacksInput, setAttacksInput ] = useState([])\n\n    const [ msg, setMsg ] = useState(\" \")\n    const [ isLoaded, setIsLoaded ] = useState(false)\n\n    useEffect(() => {\n        if(!isLoaded)\n            setIsLoaded(true)\n            fetch(\"http://localhost:8080/all-attacks\")\n                .then(res => res.json())\n                .then(\n                    (result) => {\n                        setAttackList(result);\n                    }).catch(() => setMsg(\"Connection error, try again later.\"))\n            setIsLoaded(true)\n  }, []);\n\n    const onSubmit = () => {\n        if(fieldsNotNull()){\n            fetch(\"http://localhost:8080/creature\", {\n            method: \"POST\",\n            body: JSON.stringify({\n                    name:name,\n                    type:type, \n                    description:description, \n                    attacks:attacks, \n                    stats:stats\n                }),\n            headers: {\"Content-type\": \"application/json; charset=UTF-8\"}\n            }).then(async (data) => {\n                if (data.ok) {\n                    window.open(\"/creatures\", \"_self\")\n                }\n                else {\n                    data = await data.json()\n                    setMsg(data.message)\n                }\n            }).catch(e => setMsg(\"Connection error, try again later.\"))\n        }\n        else {\n            setMsg(\"Please fill in all fields.\")\n        }\n    }\n\n    const addAttack = (e) => {\n        fetch(\"http://localhost:8080/attack/\"+e.target.value)\n                .then(res => res.json())\n                .then(\n                    (result) => {\n                        setAttacks([...attacks, result]);\n                    }).catch(() => setMsg(\"Connection error, try again later.\"))\n    }\n\n    const addAttackInput = () => {\n        setAttacksInput([...attacksInput, \n            <select className=\"mb-10 w-full\" onChange={addAttack}>\n                <option value=\"Select an attack\">- Select an attack -</option>\n                {attackList.map((attack) => <option key={attack.id} value={attack.id}>{attack.name}</option>)}\n            </select>\n        ])\n    }\n\n    const removeAttackInput = () => {\n        setAttacksInput(attacksInput.slice(0, -1))\n        setAttacks(attacks.slice(0, -1))\n    }\n\n    const fieldsNotNull = () => {\n        return (name != null) & (description != null) & (stats.defense != null) & (stats.attack != null) & (stats.health != null)\n    }\n\n    return(\n        <form className=\"flex flex-col items-left space-y-10 p-10 bg-gray-100 border-2 border-gray-200\">\n            <h1 className=\"text-2xl text-gray-500\"> Creature Builder </h1>\n            <input type=\"text\" placeholder=\"Name\" onChange={e => setName(e.target.value)}/>\n            <input type=\"text\" placeholder=\"Type\" onChange={e => setType(e.target.value)}/>\n            <textarea className=\"w-full h-32 align-text-top\"type=\"text\" placeholder=\"Description\" onChange={e => setDescription(e.target.value)}/>\n            <p className=\"text-lg text-gray-500\">Attacks:</p>\n            <div className=\"flex flex-col items-center w-full\">\n                {/* Return the attack inputs*/}\n                {attacksInput}\n                <div onClick={() => removeAttackInput()} className=\"cursor-pointer text-3xl text-red-700\">-</div>\n                <div onClick={() => addAttackInput()} className=\"cursor-pointer text-3xl text-green-700\">+</div>\n            </div>\n            <p className=\"text-lg text-gray-500\">Stats:</p>\n            <div className=\"space-x-10 flex justify-between\">\n                <input className=\"w-1/3\" type=\"number\" placeholder=\"HP\" onChange={e => stats.health = e.target.value}/>\n                <input className=\"w-1/3\" type=\"number\" placeholder=\"ATT\" onChange={e => stats.attack = e.target.value}/>\n                <input className=\"w-1/3\" type=\"number\" placeholder=\"DEF\" onChange={e => stats.defense = e.target.value}/>\n            </div>\n            <button type=\"button\" className=\"text-xl text-gray-500 pt-5\" onClick={() => onSubmit()}>Submit</button>\n            <p className=\"text-center text-red-700\">{msg}</p>\n        </form>\n    )\n    \n}\n\nexport default CreatureForm"]},"metadata":{},"sourceType":"module"}