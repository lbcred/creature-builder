{"ast":null,"code":"var _jsxFileName = \"/Users/lewis.battersby/workspace/personal/database-testing/frontend/src/Components/AttackList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AttackList() {\n  _s();\n\n  const [attacks, setAttacks] = useState([]);\n  const [msg, setMsg] = useState(\"\");\n  useEffect(() => {\n    fetch(\"http://localhost:8080/all-attacks\").then(res => res.json()).then(result => {\n      setAttacks(result);\n    }).catch(() => setMsg(\"Connection error, try again later.\"));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center text-red-700 py-10\",\n      children: msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"bg-gray-100 mt-5 w-full text-xs lg:text-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"border-grey-400 border-2\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"border-grey-400 border-2\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"border-grey-400 border-2\",\n            children: \"Damage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"border-grey-400 border-2\",\n            children: \"Damage Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"border-grey-400 border-2\",\n            children: \"Attack Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"border-grey-400 border-2\",\n            children: \"Area\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: attacks.sort(function (first, second) {\n          return first.id - second.id;\n        }).map(attack => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"border-grey-400 border-b-2 border-r-2 border-l-2 pl-2 pr-2\",\n            children: attack.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 56\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"border-grey-400 border-b-2 border-r-2 border-l-2 pl-2 pr-2\",\n            children: attack.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"border-grey-400 border-b-2 border-r-2 border-l-2 pl-2 pr-2\",\n            children: attack.damage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"border-grey-400 border-b-2 border-r-2 border-l-2 pl-2 pr-2\",\n            children: attack.damageType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"border-grey-400 border-b-2 border-r-2 border-l-2 pl-2 pr-2\",\n            children: attack.attackType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"border-grey-400 border-b-2 border-r-2 border-l-2 pl-2 pr-2\",\n            children: attack.area\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 33\n          }, this)]\n        }, attack.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 36\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AttackList, \"8Vy63CQy5Lhx1blSyj7oX4Okmfo=\");\n\n_c = AttackList;\nexport default AttackList;\n\nvar _c;\n\n$RefreshReg$(_c, \"AttackList\");","map":{"version":3,"sources":["/Users/lewis.battersby/workspace/personal/database-testing/frontend/src/Components/AttackList.js"],"names":["React","useState","useEffect","AttackList","attacks","setAttacks","msg","setMsg","fetch","then","res","json","result","catch","sort","first","second","id","map","attack","name","description","damage","damageType","attackType","area"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;;;AAEA,SAASC,UAAT,GAAqB;AAAA;;AACjB,QAAM,CAAEC,OAAF,EAAWC,UAAX,IAA0BJ,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAM,CAAEK,GAAF,EAAOC,MAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,KAAK,CAAC,mCAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAGSG,MAAD,IAAY;AACRP,MAAAA,UAAU,CAACO,MAAD,CAAV;AACH,KALT,EAKWC,KALX,CAKiB,MAAMN,MAAM,CAAC,oCAAD,CAL7B;AAML,GAPU,EAOR,EAPQ,CAAT;AASA,sBACI;AAAA,4BACI;AAAG,MAAA,SAAS,EAAC,gCAAb;AAAA,gBAA+CD;AAA/C;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,SAAS,EAAC,4CAAjB;AAAA,8BACI;AAAA,+BACI;AAAA,kCACI;AAAI,YAAA,SAAS,EAAC,0BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAI,YAAA,SAAS,EAAC,0BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAI,YAAA,SAAS,EAAC,0BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAI,YAAA,SAAS,EAAC,0BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI;AAAI,YAAA,SAAS,EAAC,0BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ,eAMI;AAAI,YAAA,SAAS,EAAC,0BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAWI;AAAA,kBACKF,OAAO,CAACU,IAAR,CACG,UAASC,KAAT,EAAgBC,MAAhB,EAAwB;AACpB,iBAAOD,KAAK,CAACE,EAAN,GAAWD,MAAM,CAACC,EAAzB;AACH,SAHJ,EAGMC,GAHN,CAIGC,MAAM,iBAAK;AAAA,kCAAoB;AAAI,YAAA,SAAS,EAAC,4DAAd;AAAA,sBAA4EA,MAAM,CAACC;AAAnF;AAAA;AAAA;AAAA;AAAA,kBAApB,eACH;AAAI,YAAA,SAAS,EAAC,4DAAd;AAAA,sBAA4ED,MAAM,CAACE;AAAnF;AAAA;AAAA;AAAA;AAAA,kBADG,eAEH;AAAI,YAAA,SAAS,EAAC,4DAAd;AAAA,sBAA4EF,MAAM,CAACG;AAAnF;AAAA;AAAA;AAAA;AAAA,kBAFG,eAGH;AAAI,YAAA,SAAS,EAAC,4DAAd;AAAA,sBAA4EH,MAAM,CAACI;AAAnF;AAAA;AAAA;AAAA;AAAA,kBAHG,eAIH;AAAI,YAAA,SAAS,EAAC,4DAAd;AAAA,sBAA4EJ,MAAM,CAACK;AAAnF;AAAA;AAAA;AAAA;AAAA,kBAJG,eAKH;AAAI,YAAA,SAAS,EAAC,4DAAd;AAAA,sBAA4EL,MAAM,CAACM;AAAnF;AAAA;AAAA;AAAA;AAAA,kBALG;AAAA,WAASN,MAAM,CAACF,EAAhB;AAAA;AAAA;AAAA;AAAA,gBAJd;AADL;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgCH;;GA9CQd,U;;KAAAA,U;AAgDT,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect }from 'react'\n\nfunction AttackList(){\n    const [ attacks, setAttacks ] = useState([])\n\n    const [ msg, setMsg ] = useState(\"\")\n\n    useEffect(() => {\n        fetch(\"http://localhost:8080/all-attacks\")\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    setAttacks(result);\n                }).catch(() => setMsg(\"Connection error, try again later.\"))\n  }, []);\n\n    return (\n        <div>\n            <p className=\"text-center text-red-700 py-10\">{msg}</p>\n            <table className=\"bg-gray-100 mt-5 w-full text-xs lg:text-md\">\n                <thead>\n                    <tr>\n                        <th className=\"border-grey-400 border-2\">Name</th>\n                        <th className=\"border-grey-400 border-2\">Description</th>\n                        <th className=\"border-grey-400 border-2\">Damage</th>\n                        <th className=\"border-grey-400 border-2\">Damage Type</th>\n                        <th className=\"border-grey-400 border-2\">Attack Type</th>\n                        <th className=\"border-grey-400 border-2\">Area</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {attacks.sort(\n                        function(first, second) {\n                            return first.id - second.id;\n                        }).map(\n                        attack => (<tr key={attack.id}><td className=\"border-grey-400 border-b-2 border-r-2 border-l-2 pl-2 pr-2\">{attack.name}</td>\n                                <td className=\"border-grey-400 border-b-2 border-r-2 border-l-2 pl-2 pr-2\">{attack.description}</td>\n                                <td className=\"border-grey-400 border-b-2 border-r-2 border-l-2 pl-2 pr-2\">{attack.damage}</td>\n                                <td className=\"border-grey-400 border-b-2 border-r-2 border-l-2 pl-2 pr-2\">{attack.damageType}</td>\n                                <td className=\"border-grey-400 border-b-2 border-r-2 border-l-2 pl-2 pr-2\">{attack.attackType}</td>\n                                <td className=\"border-grey-400 border-b-2 border-r-2 border-l-2 pl-2 pr-2\">{attack.area}</td>\n                                </tr>\n                            )\n                    )}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default AttackList"]},"metadata":{},"sourceType":"module"}