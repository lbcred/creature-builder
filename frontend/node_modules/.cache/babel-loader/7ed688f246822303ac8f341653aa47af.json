{"ast":null,"code":"var _jsxFileName = \"/Users/lewis.battersby/workspace/personal/database-testing/frontend/src/Components/AttackList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { faTrashCan } from '@fortawesome/free-regular-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AttackList() {\n  _s();\n\n  const [attacks, setAttacks] = useState([]);\n  const [msg, setMsg] = useState(\"\");\n  const [isLoaded, setIsLoaded] = useState(false);\n  useEffect(() => {}, []);\n\n  const deleteAttack = attackId => {\n    fetch(\"http://localhost:8080/attacks/\" + attackId, {\n      method: \"DELETE\"\n    }).then(async data => {\n      if (data.ok) {\n        fetchAttackList();\n      } else {\n        data = await data.json();\n        setMsg(data.message);\n      }\n    }).catch(() => setMsg(\"Connection error, try again later.\"));\n  };\n\n  const fetchAttackList = () => {\n    fetch(\"http://localhost:8080/attacks\").then(res => res.json()).then(result => {\n      setAttacks(result);\n      setIsLoaded(true);\n    }).catch(() => setMsg(\"Connection error, try again later.\"));\n  };\n\n  if (isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center text-red-700 py-10\",\n        children: msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"bg-gray-100 mt-5 w-full text-xs lg:text-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"border-grey-400 border-2\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"border-grey-400 border-2\",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"border-grey-400 border-2\",\n              children: \"Damage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"border-grey-400 border-2\",\n              children: \"Damage Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"border-grey-400 border-2\",\n              children: \"Attack Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"border-grey-400 border-2\",\n              children: \"Area\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: attacks.sort(function (first, second) {\n            return first.id - second.id;\n          }).map(attack => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"border-grey-400 border-b-2 border-r-2 border-l-2 pl-2 pr-2\",\n              children: attack.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 64\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"border-grey-400 border-b-2 border-r-2 border-l-2 pl-2 pr-2\",\n              children: attack.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"border-grey-400 border-b-2 border-r-2 border-l-2 pl-2 pr-2\",\n              children: attack.damage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"border-grey-400 border-b-2 border-r-2 border-l-2 pl-2 pr-2\",\n              children: attack.damageType\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"border-grey-400 border-b-2 border-r-2 border-l-2 pl-2 pr-2\",\n              children: attack.attackType\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"border-grey-400 border-b-2 border-r-2 border-l-2 pl-2 pr-2\",\n              children: attack.area\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"bg-gray-50 cursor-pointer px-2\",\n              onClick: () => deleteAttack(attack.id),\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faTrashCan\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 124\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 37\n            }, this)]\n          }, attack.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 44\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center text-red-700 py-10\",\n        children: msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(AttackList, \"a873XW29QVmHuHhqAkcdLzaBlbs=\");\n\n_c = AttackList;\nexport default AttackList;\n\nvar _c;\n\n$RefreshReg$(_c, \"AttackList\");","map":{"version":3,"sources":["/Users/lewis.battersby/workspace/personal/database-testing/frontend/src/Components/AttackList.js"],"names":["React","useState","useEffect","faTrashCan","FontAwesomeIcon","AttackList","attacks","setAttacks","msg","setMsg","isLoaded","setIsLoaded","deleteAttack","attackId","fetch","method","then","data","ok","fetchAttackList","json","message","catch","res","result","sort","first","second","id","map","attack","name","description","damage","damageType","attackType","area"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,qCAA3B;AACA,SAASC,eAAT,QAAgC,gCAAhC;;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AAClB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;AAEA,QAAM,CAACO,GAAD,EAAMC,MAAN,IAAgBR,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,KAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM,CAEf,CAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMU,YAAY,GAAIC,QAAD,IAAc;AAC/BC,IAAAA,KAAK,CAAC,mCAAmCD,QAApC,EAA8C;AAC/CE,MAAAA,MAAM,EAAE;AADuC,KAA9C,CAAL,CAIKC,IAJL,CAIU,MAAMC,IAAN,IAAc;AAChB,UAAIA,IAAI,CAACC,EAAT,EAAa;AACTC,QAAAA,eAAe;AAClB,OAFD,MAGK;AACDF,QAAAA,IAAI,GAAG,MAAMA,IAAI,CAACG,IAAL,EAAb;AACAX,QAAAA,MAAM,CAACQ,IAAI,CAACI,OAAN,CAAN;AACH;AACJ,KAZL,EAaKC,KAbL,CAaW,MAAMb,MAAM,CAAC,oCAAD,CAbvB;AAcH,GAfD;;AAiBA,QAAMU,eAAe,GAAG,MAAM;AAC1BL,IAAAA,KAAK,CAAC,+BAAD,CAAL,CACKE,IADL,CACUO,GAAG,IAAIA,GAAG,CAACH,IAAJ,EADjB,EAEKJ,IAFL,CAGSQ,MAAD,IAAY;AACRjB,MAAAA,UAAU,CAACiB,MAAD,CAAV;AACAb,MAAAA,WAAW,CAAC,IAAD,CAAX;AACH,KANT,EAMWW,KANX,CAMiB,MAAMb,MAAM,CAAC,oCAAD,CAN7B;AAOH,GARD;;AAUA,MAAIC,QAAJ,EAAc;AACV,wBACI;AAAA,8BACI;AAAG,QAAA,SAAS,EAAC,gCAAb;AAAA,kBAA+CF;AAA/C;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,SAAS,EAAC,4CAAjB;AAAA,gCACI;AAAA,iCACI;AAAA,oCACI;AAAI,cAAA,SAAS,EAAC,0BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAI,cAAA,SAAS,EAAC,0BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAI,cAAA,SAAS,EAAC,0BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII;AAAI,cAAA,SAAS,EAAC,0BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAKI;AAAI,cAAA,SAAS,EAAC,0BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ,eAMI;AAAI,cAAA,SAAS,EAAC,0BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAWI;AAAA,oBACKF,OAAO,CAACmB,IAAR,CACG,UAAUC,KAAV,EAAiBC,MAAjB,EAAyB;AACrB,mBAAOD,KAAK,CAACE,EAAN,GAAWD,MAAM,CAACC,EAAzB;AACH,WAHJ,EAGMC,GAHN,CAIOC,MAAM,iBAAK;AAAA,oCAAoB;AAAI,cAAA,SAAS,EAAC,4DAAd;AAAA,wBAA4EA,MAAM,CAACC;AAAnF;AAAA;AAAA;AAAA;AAAA,oBAApB,eACP;AAAI,cAAA,SAAS,EAAC,4DAAd;AAAA,wBAA4ED,MAAM,CAACE;AAAnF;AAAA;AAAA;AAAA;AAAA,oBADO,eAEP;AAAI,cAAA,SAAS,EAAC,4DAAd;AAAA,wBAA4EF,MAAM,CAACG;AAAnF;AAAA;AAAA;AAAA;AAAA,oBAFO,eAGP;AAAI,cAAA,SAAS,EAAC,4DAAd;AAAA,wBAA4EH,MAAM,CAACI;AAAnF;AAAA;AAAA;AAAA;AAAA,oBAHO,eAIP;AAAI,cAAA,SAAS,EAAC,4DAAd;AAAA,wBAA4EJ,MAAM,CAACK;AAAnF;AAAA;AAAA;AAAA;AAAA,oBAJO,eAKP;AAAI,cAAA,SAAS,EAAC,4DAAd;AAAA,wBAA4EL,MAAM,CAACM;AAAnF;AAAA;AAAA;AAAA;AAAA,oBALO,eAMP;AAAI,cAAA,SAAS,EAAC,gCAAd;AAA+C,cAAA,OAAO,EAAE,MAAMxB,YAAY,CAACkB,MAAM,CAACF,EAAR,CAA1E;AAAA,qCAAuF,QAAC,eAAD;AAAiB,gBAAA,IAAI,EAAEzB;AAAvB;AAAA;AAAA;AAAA;AAAA;AAAvF;AAAA;AAAA;AAAA;AAAA,oBANO;AAAA,aAAS2B,MAAM,CAACF,EAAhB;AAAA;AAAA;AAAA;AAAA,kBAJlB;AADL;AAAA;AAAA;AAAA;AAAA,gBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAiCH,GAlCD,MAmCK;AACD,wBACI;AAAA,6BACI;AAAG,QAAA,SAAS,EAAC,gCAAb;AAAA,kBAA+CpB;AAA/C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;AACJ;;GA/EQH,U;;KAAAA,U;AAiFT,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { faTrashCan } from '@fortawesome/free-regular-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nfunction AttackList() {\n    const [attacks, setAttacks] = useState([])\n\n    const [msg, setMsg] = useState(\"\")\n    const [isLoaded, setIsLoaded] = useState(false);\n\n    useEffect(() => {\n\n    }, []);\n\n    const deleteAttack = (attackId) => {\n        fetch(\"http://localhost:8080/attacks/\" + attackId, {\n            method: \"DELETE\"\n\n        })\n            .then(async data => {\n                if (data.ok) {\n                    fetchAttackList()\n                }\n                else {\n                    data = await data.json()\n                    setMsg(data.message)\n                }\n            })\n            .catch(() => setMsg(\"Connection error, try again later.\"))\n    }\n\n    const fetchAttackList = () => {\n        fetch(\"http://localhost:8080/attacks\")\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    setAttacks(result);\n                    setIsLoaded(true);\n                }).catch(() => setMsg(\"Connection error, try again later.\"))\n    }\n\n    if (isLoaded) {\n        return (\n            <div>\n                <p className=\"text-center text-red-700 py-10\">{msg}</p>\n                <table className=\"bg-gray-100 mt-5 w-full text-xs lg:text-md\">\n                    <thead>\n                        <tr>\n                            <th className=\"border-grey-400 border-2\">Name</th>\n                            <th className=\"border-grey-400 border-2\">Description</th>\n                            <th className=\"border-grey-400 border-2\">Damage</th>\n                            <th className=\"border-grey-400 border-2\">Damage Type</th>\n                            <th className=\"border-grey-400 border-2\">Attack Type</th>\n                            <th className=\"border-grey-400 border-2\">Area</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {attacks.sort(\n                            function (first, second) {\n                                return first.id - second.id;\n                            }).map(\n                                attack => (<tr key={attack.id}><td className=\"border-grey-400 border-b-2 border-r-2 border-l-2 pl-2 pr-2\">{attack.name}</td>\n                                    <td className=\"border-grey-400 border-b-2 border-r-2 border-l-2 pl-2 pr-2\">{attack.description}</td>\n                                    <td className=\"border-grey-400 border-b-2 border-r-2 border-l-2 pl-2 pr-2\">{attack.damage}</td>\n                                    <td className=\"border-grey-400 border-b-2 border-r-2 border-l-2 pl-2 pr-2\">{attack.damageType}</td>\n                                    <td className=\"border-grey-400 border-b-2 border-r-2 border-l-2 pl-2 pr-2\">{attack.attackType}</td>\n                                    <td className=\"border-grey-400 border-b-2 border-r-2 border-l-2 pl-2 pr-2\">{attack.area}</td>\n                                    <td className=\"bg-gray-50 cursor-pointer px-2\" onClick={() => deleteAttack(attack.id)}><FontAwesomeIcon icon={faTrashCan}/></td>\n                                </tr>\n                                )\n                            )}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n    else {\n        return (\n            <div>\n                <p className=\"text-center text-red-700 py-10\">{msg}</p>\n            </div>\n        )\n    }\n}\n\nexport default AttackList"]},"metadata":{},"sourceType":"module"}