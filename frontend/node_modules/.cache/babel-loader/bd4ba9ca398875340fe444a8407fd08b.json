{"ast":null,"code":"var _jsxFileName = \"/Users/lewis.battersby/workspace/personal/database-testing/frontend/src/Views/AttackBuilder.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AttackBuilder() {\n  _s();\n\n  const [name, setName] = useState(null);\n  const [damageType, setDamageType] = useState(null);\n  const [description, setDescription] = useState(null);\n  const [attackType, setAttackType] = useState(null);\n  const [damage, setDamage] = useState(null);\n  const [area, setArea] = useState(null);\n\n  const onSubmit = () => {\n    fetch(\"http://localhost:8080/attack\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        name: name,\n        damage: damage,\n        damageType: damageType,\n        description: description,\n        attackType: attackType,\n        area: area\n      }),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\"\n      }\n    }).then(async data => {\n      if (data.ok) {\n        data = await data.json();\n        window.open(\"/attacks\", \"_self\");\n      } else {\n        alert(\"There was a server error!\");\n      }\n    }).catch(e => console.log('Connection error', e));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-screen p-10 max-w-lg\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"flex flex-col items-left space-y-10 p-10 bg-gray-100 border-2 border-gray-200 my-10\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Name\",\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        type: \"text\",\n        placeholder: \"Description\",\n        onChange: e => setDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Damage\",\n        onChange: e => setDamage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Damage Type\",\n        onChange: e => setDamageType(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Attack Type\",\n        onChange: e => setAttackType(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Area\",\n        onChange: e => setArea(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AttackBuilder, \"8mW62qNtegczZn1qnLxuc59OgK0=\");\n\n_c = AttackBuilder;\nexport default AttackBuilder;\n\nvar _c;\n\n$RefreshReg$(_c, \"AttackBuilder\");","map":{"version":3,"sources":["/Users/lewis.battersby/workspace/personal/database-testing/frontend/src/Views/AttackBuilder.js"],"names":["React","useState","useEffect","AttackBuilder","name","setName","damageType","setDamageType","description","setDescription","attackType","setAttackType","damage","setDamage","area","setArea","onSubmit","fetch","method","body","JSON","stringify","headers","then","data","ok","json","window","open","alert","catch","e","console","log","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nfunction AttackBuilder(){\n\n    const [ name , setName ] = useState(null)\n    const [ damageType , setDamageType ] = useState(null)\n    const [ description , setDescription ] = useState(null)\n    const [ attackType , setAttackType ] = useState(null)\n    const [ damage , setDamage ] = useState(null)\n    const [ area , setArea ] = useState(null)\n\n    const onSubmit = () => {\n        fetch(\"http://localhost:8080/attack\", {\n            method: \"POST\",\n            body: JSON.stringify({\n                    name:name,\n                    damage:damage,\n                    damageType:damageType, \n                    description:description, \n                    attackType:attackType, \n                    area:area\n                }),\n            headers: {\"Content-type\": \"application/json; charset=UTF-8\"}\n        }).then(async (data) => {\n            if (data.ok) {\n                data = await data.json()\n                window.open(\"/attacks\", \"_self\")\n            }\n            else {\n                alert(\"There was a server error!\")\n            }\n        }).catch(e => console.log('Connection error', e))\n    }\n\n    return (\n        <div className=\"w-screen p-10 max-w-lg\">\n            <form className=\"flex flex-col items-left space-y-10 p-10 bg-gray-100 border-2 border-gray-200 my-10\">\n                <input type=\"text\" placeholder=\"Name\" onChange={e => setName(e.target.value)}/>\n                <textarea type=\"text\" placeholder=\"Description\" onChange={e => setDescription(e.target.value)}/>\n                <input type=\"number\" placeholder=\"Damage\" onChange={e => setDamage(e.target.value)}/>\n                <input type=\"text\" placeholder=\"Damage Type\" onChange={e => setDamageType(e.target.value)}/>\n                <input type=\"text\" placeholder=\"Attack Type\" onChange={e => setAttackType(e.target.value)}/>\n                <input type=\"number\" placeholder=\"Area\" onChange={e => setArea(e.target.value)}/>\n                <button onClick={onSubmit}>Submit</button>\n            </form>\n        </div>\n    )\n}\n\nexport default AttackBuilder"]},"metadata":{},"sourceType":"module"}