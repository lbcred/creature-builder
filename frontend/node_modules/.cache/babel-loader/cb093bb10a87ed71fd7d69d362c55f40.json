{"ast":null,"code":"var _jsxFileName = \"/Users/lewis.battersby/workspace/personal/database-testing/frontend/src/Components/ItemList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { faTrashCan } from '@fortawesome/free-regular-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ItemList() {\n  _s();\n\n  const [items, setItems] = useState([]);\n  const [msg, setMsg] = useState(\"\");\n  const [isLoaded, setIsLoaded] = useState(false);\n  useEffect(() => {\n    fetchItemList();\n  }, []);\n\n  const deleteItem = itemId => {\n    if (window.confirm(\"This item will be removed from all creatures. Are you sure?\")) {\n      fetch(\"http://localhost:8080/items/\" + itemId, {\n        method: \"DELETE\"\n      }).then(async data => {\n        if (data.ok) {\n          fetchItemList();\n        } else {\n          data = await data.json();\n          setMsg(data.message);\n        }\n      }).catch(() => setMsg(\"Connection error, try again later.\"));\n    }\n  };\n\n  const fetchItemList = () => {\n    fetch(\"http://localhost:8080/items\").then(res => res.json()).then(result => {\n      setItems(result);\n      setIsLoaded(true);\n    }).catch(() => setMsg(\"Connection error, try again later.\"));\n  };\n\n  if (isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center text-red-700 py-10\",\n        children: msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"bg-gray-100 mt-5 w-full text-xs lg:text-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"border-grey-400 border-2\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"border-grey-400 border-2\",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"border-grey-400 border-2\",\n              children: \"Item Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: items.sort(function (first, second) {\n            return first.id - second.id;\n          }).map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"border-grey-400 border-b-2 border-r-2 border-l-2 pl-2 pr-2\",\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 60\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"border-grey-400 border-b-2 border-r-2 border-l-2 pl-2 pr-2\",\n              children: item.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"border-grey-400 border-b-2 border-r-2 border-l-2 pl-2 pr-2\",\n              children: item.itemType\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"bg-gray-50 text-lg cursor-pointer px-2 hover:text-indigo-500\",\n              onClick: () => deleteItem(item.id),\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faTrashCan\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 150\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 37\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 42\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center text-red-700 py-10\",\n        children: msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(ItemList, \"hhT3FANnZilJkIT0gt2tqlqQ0ro=\");\n\n_c = ItemList;\nexport default ItemList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemList\");","map":{"version":3,"sources":["/Users/lewis.battersby/workspace/personal/database-testing/frontend/src/Components/ItemList.js"],"names":["React","useState","useEffect","faTrashCan","FontAwesomeIcon","ItemList","items","setItems","msg","setMsg","isLoaded","setIsLoaded","fetchItemList","deleteItem","itemId","window","confirm","fetch","method","then","data","ok","json","message","catch","res","result","sort","first","second","id","map","item","name","description","itemType"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { faTrashCan } from '@fortawesome/free-regular-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nfunction ItemList() {\n    const [items, setItems] = useState([])\n\n    const [msg, setMsg] = useState(\"\")\n    const [isLoaded, setIsLoaded] = useState(false);\n\n    useEffect(() => {\n        fetchItemList();\n    }, []);\n\n    const deleteItem = (itemId) => {\n        if (window.confirm(\"This item will be removed from all creatures. Are you sure?\")) {\n            fetch(\"http://localhost:8080/items/\" + itemId, {\n                method: \"DELETE\"\n\n            })\n                .then(async data => {\n                    if (data.ok) {\n                        fetchItemList()\n                    }\n                    else {\n                        data = await data.json()\n                        setMsg(data.message)\n                    }\n                })\n                .catch(() => setMsg(\"Connection error, try again later.\"))\n        }\n    }\n\n    const fetchItemList = () => {\n        fetch(\"http://localhost:8080/items\")\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    setItems(result);\n                    setIsLoaded(true);\n                }).catch(() => setMsg(\"Connection error, try again later.\"))\n    }\n\n    if (isLoaded) {\n        return (\n            <div>\n                <p className=\"text-center text-red-700 py-10\">{msg}</p>\n                <table className=\"bg-gray-100 mt-5 w-full text-xs lg:text-md\">\n                    <thead>\n                        <tr>\n                            <th className=\"border-grey-400 border-2\">Name</th>\n                            <th className=\"border-grey-400 border-2\">Description</th>\n                            <th className=\"border-grey-400 border-2\">Item Type</th>\n                            <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {items.sort(\n                            function (first, second) {\n                                return first.id - second.id;\n                            }).map(\n                                item => (<tr key={item.id}><td className=\"border-grey-400 border-b-2 border-r-2 border-l-2 pl-2 pr-2\">{item.name}</td>\n                                    <td className=\"border-grey-400 border-b-2 border-r-2 border-l-2 pl-2 pr-2\">{item.description}</td>\n                                    <td className=\"border-grey-400 border-b-2 border-r-2 border-l-2 pl-2 pr-2\">{item.itemType}</td>\n                                    <td className=\"bg-gray-50 text-lg cursor-pointer px-2 hover:text-indigo-500\" onClick={() => deleteItem(item.id)}><FontAwesomeIcon icon={faTrashCan} /></td>\n                                </tr>\n                                )\n                            )}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n    else {\n        return (\n            <div>\n                <p className=\"text-center text-red-700 py-10\">{msg}</p>\n            </div>\n        )\n    }\n}\n\nexport default ItemList"]},"metadata":{},"sourceType":"module"}