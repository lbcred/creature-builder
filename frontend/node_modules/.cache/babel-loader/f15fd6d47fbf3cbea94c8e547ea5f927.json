{"ast":null,"code":"var _jsxFileName = \"/Users/lewis.battersby/workspace/personal/database-testing/frontend/src/Views/CreatureBuilder.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CreatureBuilder() {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [attacks, setAttacks] = useState([]);\n  const [stats, setStats] = useState({});\n\n  const onSubmit = () => {\n    fetch(\"http://localhost:8080/creature\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        name: name,\n        type: type,\n        description: description,\n        attacks: attacks,\n        stats: stats\n      }),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\"\n      }\n    }).then(async data => {\n      if (data.ok) {\n        data = await data.json();\n        alert(data.message);\n      } else {\n        alert(data);\n      }\n    }).catch(e => console.log('Connection error', e));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"flex flex-col items-center space-y-10 p-10 bg-gray-200 my-10\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Stats:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"flex flex-col items-center space-y-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Health\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Attack\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Defense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CreatureBuilder, \"XSknPyI8S1k+vxKg2PIAX9AuWr4=\");\n\n_c = CreatureBuilder;\nexport default CreatureBuilder;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatureBuilder\");","map":{"version":3,"sources":["/Users/lewis.battersby/workspace/personal/database-testing/frontend/src/Views/CreatureBuilder.js"],"names":["React","useState","useEffect","CreatureBuilder","name","setName","type","setType","description","setDescription","attacks","setAttacks","stats","setStats","onSubmit","fetch","method","body","JSON","stringify","headers","then","data","ok","json","alert","message","catch","e","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,SAASC,eAAT,GAA0B;AAAA;;AAEtB,QAAM,CAAEC,IAAF,EAASC,OAAT,IAAqBJ,QAAQ,CAAC,EAAD,CAAnC;AACA,QAAM,CAAEK,IAAF,EAASC,OAAT,IAAqBN,QAAQ,CAAC,EAAD,CAAnC;AACA,QAAM,CAAEO,WAAF,EAAgBC,cAAhB,IAAmCR,QAAQ,CAAC,EAAD,CAAjD;AACA,QAAM,CAAES,OAAF,EAAYC,UAAZ,IAA2BV,QAAQ,CAAC,EAAD,CAAzC;AACA,QAAM,CAAEW,KAAF,EAAUC,QAAV,IAAuBZ,QAAQ,CAAC,EAAD,CAArC;;AAEA,QAAMa,QAAQ,GAAG,MAAM;AACnBC,IAAAA,KAAK,CAAC,gCAAD,EAAmC;AACpCC,MAAAA,MAAM,EAAE,MAD4B;AAEpCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBf,QAAAA,IAAI,EAACA,IADY;AAEhBE,QAAAA,IAAI,EAACA,IAFW;AAGhBE,QAAAA,WAAW,EAACA,WAHI;AAIhBE,QAAAA,OAAO,EAACA,OAJQ;AAKhBE,QAAAA,KAAK,EAACA;AALU,OAAf,CAF8B;AASpCQ,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB;AAT2B,KAAnC,CAAL,CAUGC,IAVH,CAUQ,MAAOC,IAAP,IAAgB;AACpB,UAAIA,IAAI,CAACC,EAAT,EAAa;AACTD,QAAAA,IAAI,GAAG,MAAMA,IAAI,CAACE,IAAL,EAAb;AACAC,QAAAA,KAAK,CAACH,IAAI,CAACI,OAAN,CAAL;AACH,OAHD,MAIK;AACDD,QAAAA,KAAK,CAACH,IAAD,CAAL;AACH;AACJ,KAlBD,EAkBGK,KAlBH,CAkBSC,CAAC,IAAIC,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,CAAhC,CAlBd;AAmBH,GApBD;;AAsBA,sBACI;AAAA,2BACI;AAAM,MAAA,SAAS,EAAC,8DAAhB;AAAA,8BACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAM,QAAA,SAAS,EAAC,uCAAhB;AAAA,gCACI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,WAAW,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,WAAW,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,WAAW,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH;;GA/CQzB,e;;KAAAA,e;AAiDT,eAAeA,eAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nfunction CreatureBuilder(){\n\n    const [ name , setName ] = useState(\"\")\n    const [ type , setType ] = useState(\"\")\n    const [ description , setDescription ] = useState(\"\")\n    const [ attacks , setAttacks ] = useState([])\n    const [ stats , setStats ] = useState({})\n\n    const onSubmit = () => {\n        fetch(\"http://localhost:8080/creature\", {\n            method: \"POST\",\n            body: JSON.stringify({\n                name:name,\n                 type:type, \n                 description:description, \n                 attacks:attacks, \n                 stats:stats\n                }),\n            headers: {\"Content-type\": \"application/json; charset=UTF-8\"}\n        }).then(async (data) => {\n            if (data.ok) {\n                data = await data.json()\n                alert(data.message)\n            }\n            else {\n                alert(data)\n            }\n        }).catch(e => console.log('Connection error', e))\n    }\n\n    return (\n        <div>\n            <form className=\"flex flex-col items-center space-y-10 p-10 bg-gray-200 my-10\">\n                <input type=\"text\" placeholder=\"Name\"/>\n                <input type=\"text\" placeholder=\"Type\"/>\n                <input type=\"text\" placeholder=\"Description\"/>\n                <input/>\n                <p>Stats:</p>\n                <form className=\"flex flex-col items-center space-y-10\">\n                    <input type=\"text\" placeholder=\"Health\"/>\n                    <input type=\"text\" placeholder=\"Attack\"/>\n                    <input type=\"text\" placeholder=\"Defense\"/>\n                </form>\n                <button>Submit</button>\n            </form>\n        </div>\n    )\n}\n\nexport default CreatureBuilder"]},"metadata":{},"sourceType":"module"}