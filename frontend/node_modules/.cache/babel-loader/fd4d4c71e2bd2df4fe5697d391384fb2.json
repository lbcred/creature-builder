{"ast":null,"code":"var _jsxFileName = \"/Users/lewis.battersby/workspace/personal/database-testing/frontend/src/Views/AttackBuilder.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AttackBuilder() {\n  _s();\n\n  const [name, setName] = useState(null);\n  const [damageType, setDamageType] = useState(null);\n  const [description, setDescription] = useState(null);\n  const [attackType, setAttackType] = useState(null);\n  const [damage, setDamage] = useState(null);\n  const [area, setArea] = useState(null);\n  const [msg, setMsg] = useState(\"\");\n\n  const onSubmit = () => {\n    if (fieldsNotNull()) {\n      fetch(\"http://localhost:8080/attack\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          name: name,\n          damage: damage,\n          damageType: damageType,\n          description: description,\n          attackType: attackType,\n          area: area\n        }),\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\"\n        }\n      }).then(async data => {\n        if (data.ok) {\n          window.open(\"/attacks\", \"_self\");\n        } else {\n          data = await data.json();\n          setMsg(data.message);\n        }\n      }).catch(() => setMsg(\"Connection error, try again later.\"));\n    } else {\n      setMsg(\"Please fill in all fields.\");\n    }\n  };\n\n  const fieldsNotNull = () => {\n    return name != null & description != null & damageType != null & attackType != null & damage != null;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-screen p-10 max-w-lg\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"flex flex-col space-y-5 items-left p-10 bg-gray-100 border-2 border-gray-200 my-10 text-gray-600\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl text-gray-500\",\n        children: \" Attack Builder \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Name\",\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"h-32\",\n        type: \"text\",\n        placeholder: \"Description\",\n        onChange: e => setDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Damage\",\n        onChange: e => setDamage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"pt-3\",\n        children: \"Damage Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setDamageType(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Piercing\",\n          children: \"Piercing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Slashing\",\n          children: \"Slashing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Bludgeoning\",\n          children: \"Bludgeoning\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Fire\",\n          children: \"Fire\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Water\",\n          children: \"Water\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Earth\",\n          children: \"Earth\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Electric\",\n          children: \"Electric\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Ice\",\n          children: \"Ice\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"pt-3\",\n        children: \"Attack Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"text-gray-200\",\n        onChange: e => setAttackType(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          className: \"text-gray-200\",\n          value: null,\n          children: \"- Attack Type -\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Melee\",\n          children: \"Melee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Ranged\",\n          children: \"Ranged\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Area\",\n          children: \"Area\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        min: \"0\",\n        max: \"10\",\n        placeholder: \"Area\",\n        onChange: e => setArea(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"text-xl text-gray-500 pt-5\",\n        onClick: onSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center text-red-700\",\n        children: msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AttackBuilder, \"x/M6CNVKWAr/3xKn4ydvtWLgeeM=\");\n\n_c = AttackBuilder;\nexport default AttackBuilder;\n\nvar _c;\n\n$RefreshReg$(_c, \"AttackBuilder\");","map":{"version":3,"sources":["/Users/lewis.battersby/workspace/personal/database-testing/frontend/src/Views/AttackBuilder.js"],"names":["React","useState","AttackBuilder","name","setName","damageType","setDamageType","description","setDescription","attackType","setAttackType","damage","setDamage","area","setArea","msg","setMsg","onSubmit","fieldsNotNull","fetch","method","body","JSON","stringify","headers","then","data","ok","window","open","json","message","catch","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\nfunction AttackBuilder(){\n\n    const [ name , setName ] = useState(null)\n    const [ damageType , setDamageType ] = useState(null)\n    const [ description , setDescription ] = useState(null)\n    const [ attackType , setAttackType ] = useState(null)\n    const [ damage , setDamage ] = useState(null)\n    const [ area , setArea ] = useState(null)\n\n    const [ msg, setMsg ] = useState(\"\")\n\n    const onSubmit = () => {\n        if(fieldsNotNull()){\n            fetch(\"http://localhost:8080/attack\", {\n                method: \"POST\",\n                body: JSON.stringify({\n                        name:name,\n                        damage:damage,\n                        damageType:damageType, \n                        description:description, \n                        attackType:attackType, \n                        area:area\n                    }),\n                headers: {\"Content-type\": \"application/json; charset=UTF-8\"}\n            }).then(async (data) => {\n                if (data.ok) {\n                    window.open(\"/attacks\", \"_self\")\n                }\n                else {\n                    data = await data.json()\n                    setMsg(data.message)\n                }\n            }).catch(() => setMsg(\"Connection error, try again later.\"))\n        }\n        else {\n            setMsg(\"Please fill in all fields.\")\n        }\n    }\n\n    const fieldsNotNull = () => {\n        return (name != null) & (description != null) & (damageType != null) & (attackType != null) & (damage != null)\n    }\n\n    return (\n        <div className=\"w-screen p-10 max-w-lg\">\n            <form className=\"flex flex-col space-y-5 items-left p-10 bg-gray-100 border-2 border-gray-200 my-10 text-gray-600\">\n                <h1 className=\"text-2xl text-gray-500\"> Attack Builder </h1>\n\n                <input type=\"text\" placeholder=\"Name\" onChange={e => setName(e.target.value)}/>\n\n                <textarea className=\"h-32\" type=\"text\" placeholder=\"Description\" onChange={e => setDescription(e.target.value)}/>\n\n                <input type=\"number\" placeholder=\"Damage\" onChange={e => setDamage(e.target.value)}/>\n\n                <p className=\"pt-3\">Damage Type</p>\n                <select onChange={e => setDamageType(e.target.value)}>\n                    <option value=\"Piercing\">Piercing</option>\n                    <option value=\"Slashing\">Slashing</option>\n                    <option value=\"Bludgeoning\">Bludgeoning</option>\n                    <option value=\"Fire\">Fire</option>\n                    <option value=\"Water\">Water</option>\n                    <option value=\"Earth\">Earth</option>\n                    <option value=\"Electric\">Electric</option>\n                    <option value=\"Ice\">Ice</option>\n                </select>\n\n                <p className=\"pt-3\">Attack Type</p>\n                <select className=\"text-gray-200\" onChange={e => setAttackType(e.target.value)}>\n                    <option className=\"text-gray-200\" value={null}>- Attack Type -</option>\n                    <option value=\"Melee\">Melee</option>\n                    <option value=\"Ranged\">Ranged</option>\n                    <option value=\"Area\">Area</option>\n                </select>\n                <p></p>\n\n                <input type=\"number\" min=\"0\" max=\"10\" placeholder=\"Area\" onChange={e => setArea(e.target.value)}/>\n\n                <button type=\"button\" className=\"text-xl text-gray-500 pt-5\" onClick={onSubmit}>Submit</button>\n                <p className=\"text-center text-red-700\">{msg}</p>\n            </form>\n        </div>\n    )\n}\n\nexport default AttackBuilder"]},"metadata":{},"sourceType":"module"}